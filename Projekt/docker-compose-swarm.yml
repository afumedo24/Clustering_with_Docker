version: "3.6"
services:

  nginx:
    restart: always
    image: registry.mygit.th-deg.de/aa10413/docker-registry/nginx:latest
    volumes:
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro"
    ports:
      - "80:80"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
    depends_on:
      - node
    

  node: 
    image: registry.mygit.th-deg.de/aa10413/docker-registry/node:latest
    restart: always
    ports:
      - 3000:80
    environment:
      - PORT=3000
      - NODE_ENV=production
    depends_on:
      - mongo
    deploy:
      replicas: 4
      restart_policy: 
        condition: any
      update_config:
        delay: 15s
        parallelism: 2
    command: node app.js




  mongo: 
    image: registry.mygit.th-deg.de/aa10413/docker-registry/mongo:latest
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=mypass
    volumes:
      - mongoDB:/data/
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      
  mongo-express:
    image: registry.mygit.th-deg.de/aa10413/docker-registry/mongo-express:latest
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=mypass
      - ME_CONFIG_MONGODB_URL=mongodb://admin:mypass@mongo:27017/
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

volumes:
  mongoDB: